// Generated by view binder compiler. Do not edit!
package com.laioffer.tinnews.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import com.laioffer.tinnews.R;
import com.mindorks.placeholderview.SwipePlaceHolderView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView acceptBtn;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final ImageView rejectBtn;

  @NonNull
  public final SwipePlaceHolderView swipeView;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView acceptBtn,
      @NonNull Guideline guideline, @NonNull ImageView rejectBtn,
      @NonNull SwipePlaceHolderView swipeView) {
    this.rootView = rootView;
    this.acceptBtn = acceptBtn;
    this.guideline = guideline;
    this.rejectBtn = rejectBtn;
    this.swipeView = swipeView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.acceptBtn;
      ImageView acceptBtn = rootView.findViewById(id);
      if (acceptBtn == null) {
        break missingId;
      }

      id = R.id.guideline;
      Guideline guideline = rootView.findViewById(id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.rejectBtn;
      ImageView rejectBtn = rootView.findViewById(id);
      if (rejectBtn == null) {
        break missingId;
      }

      id = R.id.swipeView;
      SwipePlaceHolderView swipeView = rootView.findViewById(id);
      if (swipeView == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, acceptBtn, guideline, rejectBtn,
          swipeView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
